name: Build

on:
  pull_request:
    types: [ opened, synchronize, reopened ]
  push:
    branches:
      - 'develop'

jobs:
  build:
    runs-on: ubuntu-latest
    container: node:latest
    services:
      # label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:latest
        # service environment variables
        # `POSTGRES_HOST` is `postgres`
        env:
          # optional (defaults to `postgres`)
          POSTGRES_DB: Neoflex
          # required
          POSTGRES_PASSWORD: admin
          # optional (defaults to `5432`)
          POSTGRES_PORT: 5432
          # optional (defaults to `postgres`)
          POSTGRES_USER: postgres
        ports:
          # maps tcp port 5432 on service container to the host
          - 5432:5432
        # set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

        # queries database with postgres client
        - name: Query database
          run: psql -h postgres -d postgres_db -U postgres_user -c 'SELECT 1;'
          env:
            # postgress password is required; alternatively, you can run:
            # `PGPASSWORD=postgres_password psql ...`
            PGPASSWORD: postgres_password
    steps:
      - name: Install PostgreSQL client
          run: |
            apt-get update
            apt-get install --yes postgresql-client
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.MVP6_GATEWAY }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Jimbanan_Conveyor
